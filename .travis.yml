dist: xenial
language: cpp

env:
   global:
   - CONAN_USERNAME: "dkormalev"
   - CONAN_UPLOAD: "https://api.bintray.com/conan/dkormalev/conan"
   - CONAN_BUILD_TYPES: "Release,Debug"
   - CONAN_UPLOAD_ONLY_WHEN_TAG: 1
   - CPT_TEST_FOLDER: "conan_tests"

services:
- docker

stages:
- name: build
  if: tag IS blank
- name: conan
  if: tag IS present

jobs:
  include:
  - &build
    stage: build
    name: Compilation & tests (Release, clang 9, qt5)
    install:
    - docker pull dkormalev/asynqro-builder:latest
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=clang++" -e "CC=clang" dkormalev/asynqro-builder Release
  - <<: *build
    name: Compilation & tests (Release, gcc 9, qt5)
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=g++" -e "CC=gcc" dkormalev/asynqro-builder Release
  - <<: *build
    name: Compilation & tests (Release, clang 9, no qt)
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=clang++" -e "CC=clang" --entrypoint=/build_noqt.sh dkormalev/asynqro-builder Release
  - <<: *build
    name: Compilation & tests (Release, gcc 9, no qt)
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=g++" -e "CC=gcc" --entrypoint=/build_noqt.sh dkormalev/asynqro-builder Release
  - <<: *build
    name: Clang-tidy check (clang-tidy 9)
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=clang++" -e "CC=clang" --entrypoint=/clangtidy_check.sh dkormalev/asynqro-builder
  - <<: *build
    name: Codestyle check (clang-format 6)
    script:
    - docker run --rm -v $(pwd):/asynqro --entrypoint=/codestyle_check.sh dkormalev/asynqro-builder
  - <<: *build
    name: Old compiler compatibility check (Release, clang 6, no qt)
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=clang++" -e "CC=clang" --entrypoint=/build_noqt.sh dkormalev/asynqro-builder-old-compilers Release
  - <<: *build
    name: Old compiler compatibility check (Release, gcc 7, no qt)
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=g++" -e "CC=gcc" --entrypoint=/build_noqt.sh dkormalev/asynqro-builder-old-compilers Release
  - <<: *build
    name: Code coverage calculation (Debug, gcc 9, qt5, lcov, codecov.io)
    if: type == pull_request OR branch == master OR branch == develop
    script:
    - docker run --rm -v $(pwd):/asynqro -e "CXX=g++" -e "CC=gcc" --entrypoint=/codecov.sh dkormalev/asynqro-builder
    after_success:
    - bash <(curl -s https://codecov.io/bash) -f code_coverage.total

  - &conan
    stage: conan
    name: Conan.io Linux/clang6
    language: python
    python: 3.7.1
    env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=conanio/clang60 CONAN_USE_DOCKER=1
    install:
      - .ci/conan/install.sh
    script:
      - .ci/conan/run.sh
  - <<: *conan
    name: Conan.io Linux/clang7
    env: CONAN_CLANG_VERSIONS=7.0 CONAN_DOCKER_IMAGE=conanio/clang7 CONAN_USE_DOCKER=1
  - <<: *conan
    name: Conan.io Linux/clang8
    env: CONAN_CLANG_VERSIONS=8 CONAN_DOCKER_IMAGE=conanio/clang8 CONAN_USE_DOCKER=1
  - <<: *conan
    name: Conan.io Linux/gcc7
    env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=conanio/gcc7 CONAN_USE_DOCKER=1
  - <<: *conan
    name: Conan.io Linux/gcc8
    env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=conanio/gcc8 CONAN_USE_DOCKER=1
  - <<: *conan
    name: Conan.io Linux/gcc9
    env: CONAN_GCC_VERSIONS=9 CONAN_DOCKER_IMAGE=conanio/gcc9 CONAN_USE_DOCKER=1

  - <<: *conan
    name: Conan.io MacOSX/apple-clang10
    os: osx
    osx_image: xcode10.2
    language: generic
    env: CONAN_APPLE_CLANG_VERSIONS=10.0
  - <<: *conan
    name: Conan.io MacOSX/apple-clang11
    os: osx
    osx_image: xcode11
    language: generic
    env: CONAN_APPLE_CLANG_VERSIONS=11.0
